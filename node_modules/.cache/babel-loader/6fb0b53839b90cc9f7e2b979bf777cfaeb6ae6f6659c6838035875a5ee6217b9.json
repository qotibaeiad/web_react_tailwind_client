{"ast":null,"code":"import { useState, useEffect, useMemo, createElement } from 'react';\nimport { useSpring, animated } from 'react-spring';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar defaultProperties = {\n  dark: {\n    circle: {\n      r: 9\n    },\n    mask: {\n      cx: '50%',\n      cy: '23%'\n    },\n    svg: {\n      transform: 'rotate(40deg)'\n    },\n    lines: {\n      opacity: 0\n    }\n  },\n  light: {\n    circle: {\n      r: 5\n    },\n    mask: {\n      cx: '100%',\n      cy: '0%'\n    },\n    svg: {\n      transform: 'rotate(90deg)'\n    },\n    lines: {\n      opacity: 1\n    }\n  },\n  springConfig: {\n    mass: 4,\n    tension: 250,\n    friction: 35\n  }\n};\nvar REACT_TOGGLE_DARK_MODE_GLOBAL_ID = 0;\nvar DarkModeSwitch = function DarkModeSwitch(_ref) {\n  var onChange = _ref.onChange,\n    _ref$checked = _ref.checked,\n    checked = _ref$checked === void 0 ? false : _ref$checked,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 24 : _ref$size,\n    _ref$animationPropert = _ref.animationProperties,\n    animationProperties = _ref$animationPropert === void 0 ? defaultProperties : _ref$animationPropert,\n    _ref$moonColor = _ref.moonColor,\n    moonColor = _ref$moonColor === void 0 ? 'white' : _ref$moonColor,\n    _ref$sunColor = _ref.sunColor,\n    sunColor = _ref$sunColor === void 0 ? 'black' : _ref$sunColor,\n    style = _ref.style,\n    rest = _objectWithoutPropertiesLoose(_ref, [\"onChange\", \"children\", \"checked\", \"size\", \"animationProperties\", \"moonColor\", \"sunColor\", \"style\"]);\n  var _React$useState = useState(0),\n    id = _React$useState[0],\n    setId = _React$useState[1];\n  useEffect(function () {\n    REACT_TOGGLE_DARK_MODE_GLOBAL_ID += 1;\n    setId(REACT_TOGGLE_DARK_MODE_GLOBAL_ID);\n  }, [setId]);\n  var properties = useMemo(function () {\n    if (animationProperties !== defaultProperties) {\n      return Object.assign(defaultProperties, animationProperties);\n    }\n    return animationProperties;\n  }, [animationProperties]);\n  var _properties = properties[checked ? 'dark' : 'light'],\n    circle = _properties.circle,\n    svg = _properties.svg,\n    lines = _properties.lines,\n    mask = _properties.mask;\n  var svgContainerProps = useSpring(_extends({}, svg, {\n    config: animationProperties.springConfig\n  }));\n  var centerCircleProps = useSpring(_extends({}, circle, {\n    config: animationProperties.springConfig\n  }));\n  var maskedCircleProps = useSpring(_extends({}, mask, {\n    config: animationProperties.springConfig\n  }));\n  var linesProps = useSpring(_extends({}, lines, {\n    config: animationProperties.springConfig\n  }));\n  var toggle = function toggle() {\n    return onChange(!checked);\n  };\n  var uniqueMaskId = \"circle-mask-\" + id;\n  return createElement(animated.svg, Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    color: checked ? moonColor : sunColor,\n    fill: \"none\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    stroke: \"currentColor\",\n    onClick: toggle,\n    style: _extends({\n      cursor: 'pointer'\n    }, svgContainerProps, style)\n  }, rest), createElement(\"mask\", {\n    id: uniqueMaskId\n  }, createElement(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    fill: \"white\"\n  }), createElement(animated.circle // @ts-ignore\n  , {\n    // @ts-ignore\n    style: maskedCircleProps,\n    r: \"9\",\n    fill: \"black\"\n  })), createElement(animated.circle, {\n    cx: \"12\",\n    cy: \"12\",\n    fill: checked ? moonColor : sunColor,\n    // @ts-ignore\n    style: centerCircleProps,\n    mask: \"url(#\" + uniqueMaskId + \")\"\n  }), createElement(animated.g, {\n    stroke: \"currentColor\",\n    style: linesProps\n  }, createElement(\"line\", {\n    x1: \"12\",\n    y1: \"1\",\n    x2: \"12\",\n    y2: \"3\"\n  }), createElement(\"line\", {\n    x1: \"12\",\n    y1: \"21\",\n    x2: \"12\",\n    y2: \"23\"\n  }), createElement(\"line\", {\n    x1: \"4.22\",\n    y1: \"4.22\",\n    x2: \"5.64\",\n    y2: \"5.64\"\n  }), createElement(\"line\", {\n    x1: \"18.36\",\n    y1: \"18.36\",\n    x2: \"19.78\",\n    y2: \"19.78\"\n  }), createElement(\"line\", {\n    x1: \"1\",\n    y1: \"12\",\n    x2: \"3\",\n    y2: \"12\"\n  }), createElement(\"line\", {\n    x1: \"21\",\n    y1: \"12\",\n    x2: \"23\",\n    y2: \"12\"\n  }), createElement(\"line\", {\n    x1: \"4.22\",\n    y1: \"19.78\",\n    x2: \"5.64\",\n    y2: \"18.36\"\n  }), createElement(\"line\", {\n    x1: \"18.36\",\n    y1: \"5.64\",\n    x2: \"19.78\",\n    y2: \"4.22\"\n  })));\n};\nexport { DarkModeSwitch, defaultProperties };","map":{"version":3,"names":["defaultProperties","dark","circle","r","mask","cx","cy","svg","transform","lines","opacity","light","springConfig","mass","tension","friction","REACT_TOGGLE_DARK_MODE_GLOBAL_ID","DarkModeSwitch","_ref","onChange","checked","_ref$checked","size","_ref$size","animationProperties","_ref$animationPropert","moonColor","_ref$moonColor","sunColor","_ref$sunColor","style","rest","_objectWithoutPropertiesLoose","useState","id","_React$useState","setId","useEffect","properties","useMemo","Object","assign","_properties","svgContainerProps","useSpring","_extends","config","centerCircleProps","maskedCircleProps","linesProps","toggle","uniqueMaskId","createElement","animated","xmlns","width","height","viewBox","color","fill","strokeWidth","strokeLinecap","strokeLinejoin","stroke","onClick","cursor","x","y","g","x1","y1","x2","y2"],"sources":["C:\\Users\\abdal\\OneDrive\\שולחן העבודה\\web_react_tailwind_client\\node_modules\\react-toggle-dark-mode\\src\\index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nexport const defaultProperties = {\n  dark: {\n    circle: {\n      r: 9,\n    },\n    mask: {\n      cx: '50%',\n      cy: '23%',\n    },\n    svg: {\n      transform: 'rotate(40deg)',\n    },\n    lines: {\n      opacity: 0,\n    },\n  },\n  light: {\n    circle: {\n      r: 5,\n    },\n    mask: {\n      cx: '100%',\n      cy: '0%',\n    },\n    svg: {\n      transform: 'rotate(90deg)',\n    },\n    lines: {\n      opacity: 1,\n    },\n  },\n  springConfig: { mass: 4, tension: 250, friction: 35 },\n};\n\nlet REACT_TOGGLE_DARK_MODE_GLOBAL_ID = 0;\n\ntype SVGProps = Omit<React.HTMLAttributes<HTMLOrSVGElement>, 'onChange'>;\nexport interface Props extends SVGProps {\n  onChange: (checked: boolean) => void;\n  checked: boolean;\n  style?: React.CSSProperties;\n  size?: number | string;\n  animationProperties?: typeof defaultProperties;\n  moonColor?: string;\n  sunColor?: string;\n}\n\nexport const DarkModeSwitch: React.FC<Props> = ({\n  onChange,\n  children,\n  checked = false,\n  size = 24,\n  animationProperties = defaultProperties,\n  moonColor = 'white',\n  sunColor = 'black',\n  style,\n  ...rest\n}) => {\n  const [id, setId] = React.useState(0);\n\n  React.useEffect(() => {\n    REACT_TOGGLE_DARK_MODE_GLOBAL_ID += 1;\n    setId(REACT_TOGGLE_DARK_MODE_GLOBAL_ID);\n  }, [setId]);\n\n  const properties = React.useMemo(() => {\n    if (animationProperties !== defaultProperties) {\n      return Object.assign(defaultProperties, animationProperties);\n    }\n\n    return animationProperties;\n  }, [animationProperties]);\n\n  const { circle, svg, lines, mask } = properties[checked ? 'dark' : 'light'];\n\n  const svgContainerProps = useSpring({\n    ...svg,\n    config: animationProperties.springConfig,\n  });\n  const centerCircleProps = useSpring({\n    ...circle,\n    config: animationProperties.springConfig,\n  });\n  const maskedCircleProps = useSpring({\n    ...mask,\n    config: animationProperties.springConfig,\n  });\n  const linesProps = useSpring({\n    ...lines,\n    config: animationProperties.springConfig,\n  });\n\n  const toggle = () => onChange(!checked);\n\n  const uniqueMaskId = `circle-mask-${id}`;\n\n  return (\n    <animated.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      color={checked ? moonColor : sunColor}\n      fill=\"none\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      stroke=\"currentColor\"\n      onClick={toggle}\n      style={{\n        cursor: 'pointer',\n        ...svgContainerProps,\n        ...style,\n      }}\n      {...rest}\n    >\n      <mask id={uniqueMaskId}>\n        <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"white\" />\n        <animated.circle\n          // @ts-ignore\n          style={maskedCircleProps}\n          r=\"9\"\n          fill=\"black\"\n        />\n      </mask>\n\n      <animated.circle\n        cx=\"12\"\n        cy=\"12\"\n        fill={checked ? moonColor : sunColor}\n        // @ts-ignore\n        style={centerCircleProps}\n        mask={`url(#${uniqueMaskId})`}\n      />\n      <animated.g stroke=\"currentColor\" style={linesProps}>\n        <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\" />\n        <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\" />\n        <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\" />\n        <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\" />\n        <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\" />\n        <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\" />\n        <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\" />\n        <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\" />\n      </animated.g>\n    </animated.svg>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}