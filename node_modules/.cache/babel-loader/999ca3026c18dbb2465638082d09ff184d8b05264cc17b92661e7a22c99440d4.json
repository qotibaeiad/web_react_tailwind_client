{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/web_react_tailwind/src/ShowArticle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Article = ({\n  image,\n  title,\n  author,\n  content,\n  publishtime\n}) => {\n  _s();\n  const [article, setArticle] = useState(null);\n  useEffect(() => {\n    const fetchArticle = async () => {\n      try {\n        const response = await fetch('API_URL'); // Replace 'API_URL' with your actual API endpoint\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setArticle(data); // Assuming the API returns data in the expected format\n      } catch (error) {\n        console.error('Error fetching article:', error);\n      }\n    };\n    fetchArticle();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-[1296px] mx-auto flex flex-col gap-2 p-24\",\n    children: article && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          ref: imgRef,\n          src: article.image,\n          alt: \"Article Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-4 py-3\",\n          children: article.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm dark:text-white text-gray-600 italic py-2\",\n          children: [\"Analysis by \", article.author, \" \", article.publishtime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"content\",\n          children: article.content.split('.').map((sentence, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-serif text-base pb-5\",\n            children: [sentence.trim(), \".\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Article, \"JjbGTp+AnGsrChdBI8C753xbiXc=\");\n_c = Article;\nexport default Article;\nvar _c;\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Article","image","title","author","content","publishtime","_s","article","setArticle","fetchArticle","response","fetch","ok","Error","data","json","error","console","className","children","ref","imgRef","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","split","map","sentence","index","trim","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/web_react_tailwind/src/ShowArticle.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Article = ({image,title,author,content,publishtime}) => {\n  const [article, setArticle] = useState(null);\n\n  useEffect(() => {\n    const fetchArticle = async () => {\n      try {\n        const response = await fetch('API_URL'); // Replace 'API_URL' with your actual API endpoint\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setArticle(data); // Assuming the API returns data in the expected format\n      } catch (error) {\n        console.error('Error fetching article:', error);\n      }\n    };\n\n    fetchArticle();\n  }, []);\n\n  return (\n    <div className=\"max-w-[1296px] mx-auto flex flex-col gap-2 p-24\">\n      {article && (\n        <div className=\"flex\">\n          <div className=\"flex-1\">\n            <img ref={imgRef} src={article.image} alt=\"Article Image\" />\n            <h1 className=\"text-3xl font-bold mb-4 py-3\">{article.title}</h1>\n            <p className=\"text-sm dark:text-white text-gray-600 italic py-2\">\n              Analysis by {article.author} {article.publishtime}\n            </p>\n            <div id=\"content\">\n              {article.content.split('.').map((sentence, index) => (\n                <p key={index} className=\"font-serif text-base pb-5\">{sentence.trim()}.</p>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Article;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAC;EAACC,KAAK;EAACC,KAAK;EAACC,MAAM;EAACC,OAAO;EAACC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QACzC,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,UAAU,CAACM,IAAI,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDP,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAKmB,SAAS,EAAC,iDAAiD;IAAAC,QAAA,EAC7DZ,OAAO,iBACNR,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBpB,OAAA;QAAKmB,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBpB,OAAA;UAAKqB,GAAG,EAAEC,MAAO;UAACC,GAAG,EAAEf,OAAO,CAACN,KAAM;UAACsB,GAAG,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5D5B,OAAA;UAAImB,SAAS,EAAC,8BAA8B;UAAAC,QAAA,EAAEZ,OAAO,CAACL;QAAK;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjE5B,OAAA;UAAGmB,SAAS,EAAC,mDAAmD;UAAAC,QAAA,GAAC,cACnD,EAACZ,OAAO,CAACJ,MAAM,EAAC,GAAC,EAACI,OAAO,CAACF,WAAW;QAAA;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACJ5B,OAAA;UAAK6B,EAAE,EAAC,SAAS;UAAAT,QAAA,EACdZ,OAAO,CAACH,OAAO,CAACyB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC9CjC,OAAA;YAAemB,SAAS,EAAC,2BAA2B;YAAAC,QAAA,GAAEY,QAAQ,CAACE,IAAI,CAAC,CAAC,EAAC,GAAC;UAAA,GAA/DD,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6D,CAC3E;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAxCIN,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AA0Cb,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}